{{#extends 'base'}}

{{#block "content"}}
<h1>Update Product</h1>
<form method="POST">
    {{!-- add csrf protection before form processing --}}
    <input type="hidden" name="_csrf" value="{{csrfToken}}"/>
    {{{form}}}
        <div>
            {{#if product.image_url}}
                <img src="{{product.image_url}}"/> 
            {{else}}
                <img src="" id="uploaded_image" style="display:none" />
            {{/if}}

        <a href="#" class="btn btn-primary mt-4" id="upload_widget">Upload</a>
        <div>
            <img src="" style="display:none" id="uploaded_image"/>
        </div>
    </div>
    <input type="submit" class="btn btn-primary mt-3"/>

</form>


{{/block}}

{{#block "js"}}

<!-- Cloudinary Widget JS -->
<script src="https://upload-widget.cloudinary.com/global/all.js" type="text/javascript"></script>  
<!-- Axios -->
<script src="https://cdnjs.cloudflare.com/ajax/libs/axios/1.2.1/axios.min.js" integrity="sha512-zJYu9ICC+mWF3+dJ4QC34N9RA0OVS1XtPbnf6oXlvGrLGNB8egsEzu/5wgG90I61hOOKvcywoLzwNmPqGAdATA==" crossorigin="anonymous" referrerpolicy="no-referrer"></script>

<script>
// allow the cloudinary widget to get the JavaScipt
// this function is called automatically by the upload widget
// when it needs a signature
async function generateSignature(callback, params_to_sign) {
    const response = await axios.get('/cloudinary/sign',{
        params: {
            // convert the JSON object to a string
           params_to_sign:JSON.stringify(params_to_sign)
        }
    });
    callback(response.data);
}

// this is to create the widget
// the function takes in one object as configuration as the first parameter
// the second argument is a callback function which is called
// when an upload is attempted
const uploadWidget = cloudinary.createUploadWidget({
    cloudName:"{{cloudinaryName}}",
    apiKey:"{{cloudinaryApiKey}}",
    uploadPreset:"{{cloudinaryPreset}}",
    // tell the upload widget how to get the signature
    uploadSignature: generateSignature
}, function(error, result){
    // check if the image is uploaded successfully
    if (!error && result && result.event == "success") {
        const url = result.info.url;
        document.querySelector("#id_image_url").value = url;
        document.querySelector("#uploaded_image").src = url;
        document.querySelector("#uploaded_image").style.display="inline";
    }
})

document.querySelector("#upload_widget").addEventListener("click", function(){
    uploadWidget.open()
})

</script>
{{/block}}

{{/extends}}